// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const fs = require('fs');

describe('createPOI', function() {
  jest.setTimeout(60000); // 60 seconds timeout
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('createPOI', async function() {
    try {
      // Navigate to the application
      await driver.get("http://localhost:8081/")
      await driver.manage().window().setRect({ width: 1936, height: 1066 })
      
      // ===== LOGIN =====
      console.log("Starting login...")
      await driver.findElement(By.css(".r-borderColor-1wr2p1e > .css-text-146c3p1")).click()
      await driver.findElement(By.css(".input-container:nth-child(1) input")).sendKeys("user1@gmail.com")
      await driver.findElement(By.css(".input-container:nth-child(2) input")).sendKeys("user12345*")
      await driver.findElement(By.css("div:nth-child(3) > button")).click()
      
      await driver.sleep(3000)
      console.log("Login completed...")
      
      // ===== DIRECT NAVIGATION TO COLLABORATIVE MAPS =====
      console.log("Looking for navigation elements...")
      
      // Try clicking the hamburger menu if it exists
      try {
        const hamburgerMenu = await driver.findElement(By.css("button.hamburger-button, .menu-icon, [aria-label='Menu']"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", hamburgerMenu);
        await driver.sleep(500);
        await driver.executeScript("arguments[0].click();", hamburgerMenu);
        await driver.sleep(1000);
        console.log("Clicked hamburger menu");
      } catch (error) {
        console.log("No hamburger menu found, trying direct navigation...");
      }
      
      // Direct navigation approach - find element by text
      try {
        console.log("Trying to find main Maps menu by text content...");
        const mapsMenuElement = await driver.findElement(By.xpath("//*[contains(text(), 'Mapas')]"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", mapsMenuElement);
        await driver.sleep(1000);
        await driver.executeScript("arguments[0].click();", mapsMenuElement);
        await driver.sleep(2000);
        console.log("Clicked on Maps menu item");
      } catch (error) {
        console.log("Could not find Maps menu by text:", error.message);
        
        // Fallback to fixed CSS selector
        try {
          console.log("Trying fixed CSS selector for main menu...");
          const mainMenuItem = await driver.findElement(By.css(".css-view-175oi2r:nth-child(1) > .r-transitionProperty-1i6wzkk > .css-text-146c3p1"));
          await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", mainMenuItem);
          await driver.sleep(1000);
          await driver.executeScript("arguments[0].click();", mainMenuItem);
          await driver.sleep(2000);
          console.log("Clicked main menu with fixed selector");
        } catch (error) {
          console.log("Fixed CSS selector also failed:", error.message);
        }
      }
      
      // Find the "Mapas Colaborativos" submenu item
      try {
        console.log("Looking for 'Mapas Colaborativos' text...");
        const colaborativosElement = await driver.findElement(By.xpath("//*[contains(text(), 'Mapas Colaborativos')]"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", colaborativosElement);
        await driver.sleep(1000);
        await driver.executeScript("arguments[0].click();", colaborativosElement);
        await driver.sleep(2000);
        console.log("Clicked on Mapas Colaborativos");
      } catch (error) {
        console.log("Could not find Mapas Colaborativos by text:", error.message);
        
        // Try alternative text search
        try {
          console.log("Trying 'Colaborativo' text search...");
          const colaborativoElement = await driver.findElement(By.xpath("//*[contains(text(), 'Colaborativo')]"));
          await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", colaborativoElement);
          await driver.sleep(1000);
          await driver.executeScript("arguments[0].click();", colaborativoElement);
          await driver.sleep(2000);
          console.log("Clicked on Colaborativo text");
        } catch (error) {
          console.log("Could not find Colaborativo by text:", error.message);
          
          // Last resort - fixed submenu selector
          try {
            console.log("Trying fixed submenu selector...");
            const subMenuItem = await driver.findElement(By.css(".r-paddingBlock-ytbthy:nth-child(2) > .css-text-146c3p1"));
            await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", subMenuItem);
            await driver.sleep(1000);
            await driver.executeScript("arguments[0].click();", subMenuItem);
            await driver.sleep(2000);
            console.log("Clicked submenu with fixed selector");
          } catch (error) {
            console.log("All navigation attempts failed:", error.message);
          }
        }
      }
      
      // ===== INTERACT WITH MAP =====
      console.log("Waiting for map to load...");
      await driver.wait(until.elementLocated(By.css(".leaflet-container")), 10000);
      await driver.sleep(2000);
      
      console.log("Map loaded");
      
      // Click on a button to create a new POI
      try {
        console.log("Looking for create POI button...");
        const createButton = await driver.findElement(By.css(".r-color-djgu52"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", createButton);
        await driver.sleep(1000);
        await driver.executeScript("arguments[0].click();", createButton);
        await driver.sleep(2000);
        console.log("Clicked create POI button");
      } catch (error) {
        console.log("Create button interaction failed:", error.message);
      }
      
      // Click on the map to set POI location
      try {
        console.log("Setting POI location on map...");
        const mapContainer = await driver.findElement(By.css(".leaflet-container"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", mapContainer);
        await driver.sleep(1000);
        
        // Click the map using JavaScript
        await driver.executeScript(
          "const mapElem = document.querySelector('.leaflet-container'); " +
          "const event = new MouseEvent('click', {" +
          "  bubbles: true," +
          "  cancelable: true," +
          "  clientX: mapElem.getBoundingClientRect().left + 150," +
          "  clientY: mapElem.getBoundingClientRect().top + 150" +
          "});" +
          "mapElem.dispatchEvent(event);"
        );
        await driver.sleep(2000);
        console.log("Map clicked for POI location");
      } catch (error) {
        console.log("Map click failed:", error.message);
      }
      
      // ===== FILL POI FORM =====
      console.log("Filling POI form...");
      try {
        // Title input
        const titleInput = await driver.findElement(By.css(".css-view-175oi2r:nth-child(1) > .css-textinput-11aywtz"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", titleInput);
        await driver.sleep(500);
        await titleInput.click();
        await titleInput.sendKeys("Iglesia de al lado");
        
        // Description input
        const descInput = await driver.findElement(By.css(".css-view-175oi2r:nth-child(2) > .css-textinput-11aywtz"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", descInput);
        await driver.sleep(500);
        await descInput.click();
        await descInput.sendKeys("Viva el niÃ±o jesus");
        
        // Category dropdown
        const dropdown = await driver.findElement(By.css(".dropdown > .css-text-146c3p1"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", dropdown);
        await driver.sleep(500);
        await driver.executeScript("arguments[0].click();", dropdown);
        await driver.sleep(1000);
        
        
        // Select first category
        const category = await driver.findElement(By.css(".px-3:nth-child(1) > .css-text-146c3p1"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", category);
        await driver.sleep(500);
        await driver.executeScript("arguments[0].click();", category);
        await driver.sleep(1000);
        
        // Submit button
        const submitBtn = await driver.findElement(By.css(".css-view-175oi2r:nth-child(5) > .css-text-146c3p1"));
        await driver.executeScript("arguments[0].scrollIntoView({block: 'center'});", submitBtn);
        await driver.sleep(1000);
        await driver.executeScript("arguments[0].click();", submitBtn);
        await driver.sleep(2000);
        
        console.log("POI created successfully");
        
      } catch (error) {
        console.log("Form interaction failed:", error.message);
      }
      
    } catch (error) {
      console.log("Test failed:", error.message);
    }
  })
})

